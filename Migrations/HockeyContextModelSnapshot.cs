// <auto-generated />
using HockeyPlayoffs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HockeyPlayoffs.Migrations
{
    [DbContext(typeof(HockeyContext))]
    partial class HockeyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HockeyPlayoffs.Data.PlayoffPossibility", b =>
                {
                    b.Property<int>("PlayoffPossibilityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Atlantic1Games");

                    b.Property<string>("Atlantic1Winner")
                        .HasMaxLength(3);

                    b.Property<int>("Atlantic2Games");

                    b.Property<string>("Atlantic2Winner")
                        .HasMaxLength(3);

                    b.Property<int>("AtlanticGames");

                    b.Property<string>("AtlanticWinner")
                        .HasMaxLength(3);

                    b.Property<int>("Central1Games");

                    b.Property<string>("Central1Winner")
                        .HasMaxLength(3);

                    b.Property<int>("Central2Games");

                    b.Property<string>("Central2Winner")
                        .HasMaxLength(3);

                    b.Property<int>("CentralGames");

                    b.Property<string>("CentralWinner")
                        .HasMaxLength(3);

                    b.Property<int>("ChampionshipsGames");

                    b.Property<string>("ChampionshipsWinner")
                        .HasMaxLength(3);

                    b.Property<int>("EasternGames");

                    b.Property<string>("EasternWinner")
                        .HasMaxLength(3);

                    b.Property<int>("Metro1Games");

                    b.Property<string>("Metro1Winner")
                        .HasMaxLength(3);

                    b.Property<int>("Metro2Games");

                    b.Property<string>("Metro2Winner")
                        .HasMaxLength(3);

                    b.Property<int>("MetroGames");

                    b.Property<string>("MetroWinner")
                        .HasMaxLength(3);

                    b.Property<int>("Pacific1Games");

                    b.Property<string>("Pacific1Winner")
                        .HasMaxLength(3);

                    b.Property<int>("Pacific2Games");

                    b.Property<string>("Pacific2Winner")
                        .HasMaxLength(3);

                    b.Property<int>("PacificGames");

                    b.Property<string>("PacificWinner")
                        .HasMaxLength(3);

                    b.Property<int>("WesternGames");

                    b.Property<string>("WesternWinner")
                        .HasMaxLength(3);

                    b.HasKey("PlayoffPossibilityId");

                    b.ToTable("PlayoffPossibilities");
                });
#pragma warning restore 612, 618
        }
    }
}
